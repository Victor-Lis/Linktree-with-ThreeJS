{"version":3,"sources":["../node_modules/three/build/three.module.js","JS/textures.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_this9","count","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","Float64BufferAttribute","_BufferAttribute10","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_this16","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","clipCullDistance","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this18","PerspectiveCamera","_Camera","_this19","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this25","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateVertexExtensions","extensionClipCullDistance","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this26","isMeshDepthMaterial","_Material4","_this27","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_this28","isArrayCamera","Group","_Object3D4","_this29","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRManager","_EventDispatcher6","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","FogExp2","Fog","Scene","_Object3D5","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_this36","isBone","DataTexture","_Texture5","_this37","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this40","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","isWebGPURenderer","culled","_Material6","_this41","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_this42","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_this43","LineLoop","_Line2","_this44","_Material7","_this45","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this46","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this47","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this48","CompressedTexture","_Texture8","_this49","CompressedArrayTexture","_CompressedTexture","_this50","CompressedCubeTexture","_CompressedTexture2","_this51","isCompressedCubeTexture","CanvasTexture","_Texture9","_this52","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this53","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this54","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this55","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this56","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this57","isCubicBezierCurve3","LineCurve","_Curve5","_this58","isLineCurve","LineCurve3","_Curve6","_this59","isLineCurve3","QuadraticBezierCurve","_Curve7","_this60","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this61","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this62","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this63","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this64","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this65","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this66","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this67","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this68","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this69","PolyhedronGeometry","_BufferGeometry6","_this70","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this71","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this72","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this73","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this74","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this75","OctahedronGeometry","_PolyhedronGeometry3","_this76","RingGeometry","_BufferGeometry9","_this77","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this78","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this79","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this80","TorusGeometry","_BufferGeometry12","_this81","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this82","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this83","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this84","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this85","RawShaderMaterial","_ShaderMaterial","_this86","_Material9","_this87","_MeshStandardMaterial","_this88","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_this89","_Material11","_this90","_Material12","_this91","_Material13","_this92","_Material14","_this93","_LineBasicMaterial","_this94","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this95","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this96","_wrapNativeSuper","FileLoader","_Loader","_this97","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this98","HemisphereLight","_Light","_this99","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this100","isSpotLightShadow","SpotLight","_Light2","_this101","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this102","_cubeDirections","_cubeUps","PointLight","_Light3","_this103","DirectionalLightShadow","_LightShadow3","_this104","isDirectionalLightShadow","DirectionalLight","_Light4","_this105","AmbientLight","_Light5","_this106","RectAreaLight","_Light6","_this107","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this108","MaterialLoader","_Loader8","_this109","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this110","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this111","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this112","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this113","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this114","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this115","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this117","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this118","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this121","GridHelper","_LineSegments2","_this122","PolarGridHelper","_LineSegments3","_this123","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this126","Box3Helper","_LineSegments6","_this127","PlaneHelper","_Line3","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this129","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","THREE","_interopRequireWildcard","require","_grass","_interopRequireDefault","_stonebrick","_linkedin","_github","_madeira","_quartzo","_pedregulho","_ball","_portal","_obsidiana","_glowstone","_frontEndMentor","_Dev_VictorLis","_Followers","_stars","obj","__esModule","default","_getRequireWildcardCache","getOwnPropertyDescriptor","textureLoader","grass","grassImg","brick","brickImg","linkedin","linkedinImg","github","githubImg","madeira","madeiraImg","quartzo","quartzoImg","pedregulho","pedregulhoImg","bola","ballImg","portal","portalImg","obsidiana","obsidianImg","glowstone","glowstoneImg","frontEndMentor","frontEndMentorImg","banner","bannerImg","followersFloor","followersFloorImg","starsFloor","starsFloorImg"],"mappings":"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","file":"textures.354b80d0.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '160';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$1 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$1 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false, // set to use shader texture LOD\n\t\t\tclipCullDistance: false // set to use vertex shader clipping\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // deprecated\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// deprecated\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\treturn color;\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance && extensions.has( 'WEBGL_clip_cull_distance' ),\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.isWebGPURenderer ? WebGPUCoordinateSystem : WebGLCoordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import * as THREE from 'three';\r\nimport grassImg from '../imgs/grass.svg'\r\nimport brickImg from '../imgs/stonebrick.svg'\r\nimport linkedinImg from '../imgs/linkedin.png'\r\nimport githubImg from '../imgs/github.png'\r\nimport madeiraImg from '../imgs/madeira.jpeg'\r\nimport quartzoImg from '../imgs/quartzo.svg'\r\nimport pedregulhoImg from '../imgs/pedregulho.jpeg'\r\nimport ballImg from '../imgs/ball.png'\r\nimport portalImg from '../imgs/portal.gif'\r\nimport obsidianImg from '../imgs/obsidiana.jpeg'\r\nimport glowstoneImg from '../imgs/glowstone.png'\r\nimport frontEndMentorImg from '../imgs/front-end-mentor.png'\r\nimport bannerImg from '../imgs/Dev_Victor-Lis.png'\r\nimport followersFloorImg from '../imgs/Followers.png'\r\nimport starsFloorImg from '../imgs/stars.png'\r\n\r\nconst textureLoader = new THREE.TextureLoader()\r\n\r\nconst grass = textureLoader.load(grassImg)\r\nconst brick = textureLoader.load(brickImg)\r\nconst linkedin = textureLoader.load(linkedinImg)\r\nconst github = textureLoader.load(githubImg)\r\nconst madeira = textureLoader.load(madeiraImg)\r\nconst quartzo = textureLoader.load(quartzoImg)\r\nconst pedregulho = textureLoader.load(pedregulhoImg)\r\nconst bola = textureLoader.load(ballImg)\r\nconst portal = textureLoader.load(portalImg)\r\nconst obsidiana = textureLoader.load(obsidianImg)\r\nconst glowstone = textureLoader.load(glowstoneImg)\r\nconst frontEndMentor = textureLoader.load(frontEndMentorImg)\r\nconst banner = textureLoader.load(bannerImg)\r\nconst followersFloor = textureLoader.load(followersFloorImg)\r\nconst starsFloor = textureLoader.load(starsFloorImg)\r\n\r\nexport { \r\n    grass, \r\n    brick, \r\n    linkedin, \r\n    github, \r\n    madeira, \r\n    quartzo, \r\n    pedregulho, \r\n    bola, \r\n    portal, \r\n    obsidiana,\r\n    glowstone,\r\n    frontEndMentor,\r\n    banner,\r\n    followersFloor,\r\n    starsFloor,\r\n    textureLoader\r\n}"]}